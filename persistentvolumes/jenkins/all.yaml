apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/bound-by-controller: "yes"
  creationTimestamp: "2020-09-19T18:15:42Z"
  finalizers:
  - kubernetes.io/pv-protection
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:accessModes: {}
        f:capacity:
          .: {}
          f:storage: {}
        f:mountOptions: {}
        f:nfs:
          .: {}
          f:path: {}
          f:server: {}
        f:persistentVolumeReclaimPolicy: {}
        f:storageClassName: {}
        f:volumeMode: {}
    manager: kubectl-create
    operation: Update
    time: "2020-09-19T18:15:42Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:pv.kubernetes.io/bound-by-controller: {}
      f:spec:
        f:claimRef:
          .: {}
          f:apiVersion: {}
          f:kind: {}
          f:name: {}
          f:namespace: {}
          f:resourceVersion: {}
          f:uid: {}
      f:status:
        f:phase: {}
    manager: kube-controller-manager
    operation: Update
    time: "2020-09-19T18:15:48Z"
  name: jenkins
  resourceVersion: "85683"
  selfLink: /api/v1/persistentvolumes/jenkins
  uid: 584b4b37-9cec-4714-b32b-ef97b45e8747
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 8Gi
  claimRef:
    apiVersion: v1
    kind: PersistentVolumeClaim
    name: jenkins
    namespace: default
    resourceVersion: "85681"
    uid: 03d3a773-d1e0-499a-b30c-cbc25199017d
  mountOptions:
  - hard
  - nfsvers=3
  nfs:
    path: /nfs/rpi/jenkins
    server: 192.168.21.39
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: nfs-client
  volumeMode: Filesystem
status:
  phase: Bound
